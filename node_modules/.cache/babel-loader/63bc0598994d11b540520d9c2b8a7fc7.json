{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport NgoModel from \"../model/NgoModel\";\nconst NgoSlice = createSlice({\n  name: 'ngo',\n  initialState: {\n    ngoState: new NgoModel(),\n    ngoStateLocation: [],\n    ngoStateMotive: [],\n    ngoList: [],\n    ngoDelete: new NgoModel()\n  },\n  reducers: {\n    getNgoById: (state, action) => {\n      console.log(\"NgoSlice reducers getNgoById\");\n      state.ngoState = action.payload;\n    },\n    getNgoByLocation: (state, action) => {\n      console.log(\"NgoSlice reducers getNgoByLocation\");\n      state.ngoStateLocation = action.payload;\n    },\n    getNgoByMotive: (state, action) => {\n      console.log(\"NgoSlice reducers getNgoByMotive\");\n      state.ngoStateMotive = action.payload;\n    },\n    getAllNgo: (state, action) => {\n      console.log('NgoSlice reducers getAllNgo');\n      state.ngoList = action.payload;\n    },\n    deleteNgoByID: (state, action) => {\n      console.log(\"NgoSlice reducers deleteNgo\");\n      state.ngoDelete = action.payload;\n    },\n    addNgo: (state, action) => {\n      console.log(\"NgoSlice reducers addScheme\");\n      state.ngoAdd = action.payload;\n    }\n  }\n});\nexport const {\n  getNgoById,\n  getAllNgo,\n  getNgoByLocation,\n  getNgoByMotive,\n  deleteNgoByID,\n  addNgo\n} = NgoSlice.actions;\nexport default NgoSlice.reducer; //\n// import { createSlice } from \"@reduxjs/toolkit\";\n// import Ngo from \"../model/Ngo\";\n// // step 3 for redux - create slices for each components \n// const NgoSlice = createSlice({\n//     name: 'ngo',\n//     initialState: {\n//         ngoState: new Ngo(),\n//         ngoList: []\n//     },\n//     reducers: {\n//         getNgoById: (state, action) => {\n//             console.log('NgoSlice reducers getNgoById');\n//             state.ngoState = action.payload;\n//         },\n//     }\n// });\n// export const { getNgoById} = NgoSlice.actions;\n// export default NgoSlice.reducer;","map":{"version":3,"sources":["C:/Users/SADARKAR/Downloads/women-empowerment-frontend-main/src/redux/NgoSlice.js"],"names":["createSlice","NgoModel","NgoSlice","name","initialState","ngoState","ngoStateLocation","ngoStateMotive","ngoList","ngoDelete","reducers","getNgoById","state","action","console","log","payload","getNgoByLocation","getNgoByMotive","getAllNgo","deleteNgoByID","addNgo","ngoAdd","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,MAAMC,QAAQ,GAAGF,WAAW,CAAC;AACzBG,EAAAA,IAAI,EAAC,KADoB;AAGzBC,EAAAA,YAAY,EAAE;AAEVC,IAAAA,QAAQ,EAAE,IAAIJ,QAAJ,EAFA;AAGVK,IAAAA,gBAAgB,EAAE,EAHR;AAIVC,IAAAA,cAAc,EAAE,EAJN;AAKVC,IAAAA,OAAO,EAAC,EALE;AAMVC,IAAAA,SAAS,EAAG,IAAIR,QAAJ;AANF,GAHW;AAYzBS,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAH,MAAAA,KAAK,CAACP,QAAN,GAAiBQ,MAAM,CAACG,OAAxB;AACH,KAJK;AAMNC,IAAAA,gBAAgB,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAH,MAAAA,KAAK,CAACN,gBAAN,GAAyBO,MAAM,CAACG,OAAhC;AACH,KATK;AAWNE,IAAAA,cAAc,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAH,MAAAA,KAAK,CAACL,cAAN,GAAuBM,MAAM,CAACG,OAA9B;AACH,KAdK;AAgBNG,IAAAA,SAAS,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAmB;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAH,MAAAA,KAAK,CAACJ,OAAN,GAAgBK,MAAM,CAACG,OAAvB;AACH,KAnBK;AAqBNI,IAAAA,aAAa,EAAG,CAACR,KAAD,EAAQC,MAAR,KAAmB;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAH,MAAAA,KAAK,CAACH,SAAN,GAAkBI,MAAM,CAACG,OAAzB;AACH,KAxBK;AA0BNK,IAAAA,MAAM,EAAG,CAACT,KAAD,EAAQC,MAAR,KAAmB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAH,MAAAA,KAAK,CAACU,MAAN,GAAeT,MAAM,CAACG,OAAtB;AACH;AA7BK;AAZe,CAAD,CAA5B;AA+CA,OAAO,MAAM;AAACL,EAAAA,UAAD;AAAcQ,EAAAA,SAAd;AAA0BF,EAAAA,gBAA1B;AAA6CC,EAAAA,cAA7C;AAA8DE,EAAAA,aAA9D;AAA8EC,EAAAA;AAA9E,IAAwFnB,QAAQ,CAACqB,OAAvG;AACP,eAAerB,QAAQ,CAACsB,OAAxB,C,CAGA;AAMA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport NgoModel from \"../model/NgoModel\";\r\n\r\nconst NgoSlice = createSlice({\r\n    name:'ngo',\r\n\r\n    initialState: {\r\n\r\n        ngoState: new NgoModel(),\r\n        ngoStateLocation: [],\r\n        ngoStateMotive: [],\r\n        ngoList:[],\r\n        ngoDelete : new NgoModel()\r\n    },\r\n\r\n    reducers: {\r\n        getNgoById: (state, action) => {\r\n            console.log(\"NgoSlice reducers getNgoById\");\r\n            state.ngoState = action.payload;\r\n        },\r\n\r\n        getNgoByLocation: (state, action) => {\r\n            console.log(\"NgoSlice reducers getNgoByLocation\");\r\n            state.ngoStateLocation = action.payload;\r\n        },\r\n\r\n        getNgoByMotive: (state, action) => {\r\n            console.log(\"NgoSlice reducers getNgoByMotive\");\r\n            state.ngoStateMotive = action.payload;\r\n        },\r\n\r\n        getAllNgo: (state, action) => {\r\n            console.log('NgoSlice reducers getAllNgo');\r\n            state.ngoList = action.payload;\r\n        },\r\n\r\n        deleteNgoByID : (state, action) => {\r\n            console.log(\"NgoSlice reducers deleteNgo\");\r\n            state.ngoDelete = action.payload;\r\n        },\r\n\r\n        addNgo : (state, action) => {\r\n            console.log(\"NgoSlice reducers addScheme\");\r\n            state.ngoAdd = action.payload;\r\n        }\r\n    }\r\n}\r\n\r\n);\r\n\r\nexport const {getNgoById , getAllNgo , getNgoByLocation , getNgoByMotive , deleteNgoByID , addNgo} = NgoSlice.actions;\r\nexport default NgoSlice.reducer;\r\n\r\n\r\n//\r\n\r\n\r\n\r\n\r\n\r\n// import { createSlice } from \"@reduxjs/toolkit\";\r\n// import Ngo from \"../model/Ngo\";\r\n\r\n// // step 3 for redux - create slices for each components \r\n// const NgoSlice = createSlice({\r\n\r\n//     name: 'ngo',\r\n\r\n//     initialState: {\r\n        \r\n//         ngoState: new Ngo(),\r\n//         ngoList: []\r\n\r\n\r\n//     },\r\n\r\n//     reducers: {\r\n\r\n//         getNgoById: (state, action) => {\r\n//             console.log('NgoSlice reducers getNgoById');\r\n//             state.ngoState = action.payload;\r\n//         },\r\n//     }\r\n// });\r\n\r\n// export const { getNgoById} = NgoSlice.actions;\r\n\r\n// export default NgoSlice.reducer;"]},"metadata":{},"sourceType":"module"}